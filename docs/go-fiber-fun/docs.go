// Package go_fiber_fun Code generated by swaggo/swag. DO NOT EDIT
package go_fiber_fun

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/albums/{id}": {
            "get": {
                "description": "Get a specific Album by its ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a specific Album by ID",
                "operationId": "get-album",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Album ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/structs.Album"
                        }
                    }
                }
            }
        },
        "/artists": {
            "get": {
                "description": "Get a list of all artists in the database",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a list of all artists",
                "operationId": "get-artists",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structs.Artist"
                            }
                        }
                    }
                }
            }
        },
        "/artists/{id}": {
            "get": {
                "description": "Get a specific artist by its ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a specific artist by ID",
                "operationId": "get-artist-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Artist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/structs.Artist"
                        }
                    }
                }
            }
        },
        "/artists/{id}/albums": {
            "get": {
                "description": "Get all albums for a specific artist ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a specific artists albums by artist ID",
                "operationId": "get-artist-albums-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Artist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structs.Album"
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "get the status of server.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "root"
                ],
                "summary": "Show the status of server.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "structs.Album": {
            "type": "object",
            "properties": {
                "albumId": {
                    "type": "integer"
                },
                "artistId": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "structs.Artist": {
            "type": "object",
            "properties": {
                "artistId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Fiber Swagger Example API",
	Description:      "This is a sample server server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
